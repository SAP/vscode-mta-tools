{
  "name": "vscode-mta-tools",
  "displayName": "vscode-mta-tools",
  "description": "VS Code Multi-Target Application tools",
  "version": "1.4.7",
  "publisher": "SAPSE",
  "license": "Apache-2.0",
  "repository": {
    "type": "git",
    "url": "git@github.com/SAP/vscode-mta-tools.git"
  },
  "publishConfig": {
    "access": "public"
  },
  "engines": {
    "vscode": "^1.53.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "extensionDependencies": [
    "sapos.yeoman-ui"
  ],
  "BASContributes": {
    "tasksExplorer": [
      {
        "type": "deploy-mta",
        "intent": "Deploy"
      },
      {
        "type": "build-mta",
        "intent": "Build"
      }
    ]
  },
  "main": "./dist/extension.js",
  "contributes": {
    "taskDefinitions": [
      {
        "type": "deploy-mta",
        "required": [
          "label",
          "taskType",
          "mtarPath"
        ],
        "properties": {
          "label": {
            "type": "string",
            "description": "Task Name"
          },
          "taskType": {
            "type": "string",
            "description": "Task Type"
          },
          "mtarPath": {
            "type": "string",
            "description": "Path to the MTAR File"
          },
          "extPath": {
            "type": "string",
            "description": "Path to the Extension File"
          }
        }
      },
      {
        "type": "build-mta",
        "required": [
          "label",
          "taskType",
          "mtaFilePath",
          "buildType"
        ],
        "properties": {
          "label": {
            "type": "string",
            "description": "Task Name"
          },
          "taskType": {
            "type": "string",
            "description": "Task Type"
          },
          "buildType": {
            "type": "string",
            "description": "Build Type"
          },
          "mtaFilePath": {
            "type": "string",
            "description": "Path to the Project's 'mta.yaml' File"
          },
          "mtarTargetPath": {
            "type": "string",
            "description": "Path to the MTAR Target Folder"
          },
          "mtarName": {
            "type": "string",
            "description": "MTAR File Name"
          },
          "extPath": {
            "type": "string",
            "description": "Path to the Extension File"
          },
          "modules": {
            "type": "array",
            "description": "Modules"
          },
          "dependencies": {
            "type": "array",
            "description": "Dependencies"
          },
          "targetFolderPath": {
            "type": "string",
            "description": "Path to the Target Folder"
          }
        }
      }
    ],
    "problemMatchers": [
      {
        "name": "MTA",
        "source": "MTA Validate",
        "label": "Validate MTA development descriptor and extension files"
      }
    ],
    "languages": [
      {
        "id": "yaml",
        "extensions": [
          ".mtaext"
        ]
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": [
          "mta.yaml",
          "mta.yml"
        ],
        "url": "https://json.schemastore.org/mta"
      },
      {
        "fileMatch": [
          "mtad.yaml",
          "mtad.yml"
        ],
        "url": "https://json.schemastore.org/mtad"
      },
      {
        "fileMatch": [
          "*.mtaext"
        ],
        "url": "https://json.schemastore.org/mtaext"
      }
    ],
    "commands": [
      {
        "command": "extension.mtaBuildCommand",
        "title": "Build MTA Project"
      },
      {
        "command": "extension.mtarDeployCommand",
        "title": "Deploy MTA Archive"
      },
      {
        "command": "extension.addModuleCommand",
        "title": "Create MTA Module from Template"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "resourceFilename == mta.yaml",
          "command": "extension.mtaBuildCommand",
          "group": "navigation@2"
        },
        {
          "when": "resourceFilename =~ /.*.mtar/",
          "command": "extension.mtarDeployCommand",
          "group": "navigation@1"
        },
        {
          "when": "resourceFilename == mta.yaml",
          "command": "extension.addModuleCommand",
          "group": "navigation@1"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "MTA Tools",
      "properties": {
        "MTA Tools.loggingLevel": {
          "type": "string",
          "enum": [
            "off",
            "fatal",
            "error",
            "warn",
            "info",
            "debug",
            "trace"
          ],
          "default": "error",
          "description": "The verbosity of logging according to the following order: trace > debug > info > warn > error > fatal > off.",
          "scope": "resource"
        },
        "MTA Tools.sourceLocationTracking": {
          "type": "boolean",
          "default": false,
          "description": "If chosen, the location of the source code is added to log entries. Warning â€“ this action may slow your extension. We recommend you use it only for debugging.",
          "scope": "resource"
        }
      }
    }
  },
  "scripts": {
    "version:suggest": "conventional-recommended-bump -preset=\"angular\"",
    "version": "npm run version:changelog -s && git add CHANGELOG.md",
    "version:changelog": "conventional-changelog -p angular -i CHANGELOG.md -s",
    "ci": "npm-run-all format:validate lint compile build test",
    "watch": "tsc -watch -p ./",
    "compile": "tsc -p ./",
    "format:fix": "prettier --write --ignore-path .gitignore \"**/*.@(ts|js|json|md|yml)\"",
    "format:validate": "prettier --check --ignore-path .gitignore \"**/*.@(ts|js|json|md|yml)\"",
    "lint": "eslint . --ext .ts --fix --max-warnings=0",
    "build": "vsce package",
    "test": "nyc mocha",
    "coverage:check": "nyc mocha",
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "webpack:watch": "webpack --mode development --watch"
  },
  "dependencies": {
    "lodash": "4.17.21",
    "comment-json": "4.1.1",
    "fs-extra": "10.0.0",
    "@vscode-logging/logger": "1.2.3",
    "@sap/swa-for-sapbas-vsx": "1.2.15",
    "@sap/mta-lib": "1.7.4",
    "@sap/cf-tools": "2.0.1",
    "datauri": "2.0.0"
  },
  "devDependencies": {
    "@sap_oss/task_contrib_types": "3.1.0",
    "@commitlint/cli": "12.1.1",
    "@commitlint/config-conventional": "12.1.1",
    "@types/chai": "4.2.21",
    "@types/comment-json": "2.4.2",
    "@types/fs-extra": "9.0.12",
    "@types/lodash": "4.14.171",
    "@types/node": "16.0.0",
    "@types/mocha": "8.2.2",
    "@types/sinon": "10.0.2",
    "@types/vscode": "1.53.0",
    "@types/rimraf": "^3.0.0",
    "@types/tmp": "^0.2.1",
    "@typescript-eslint/eslint-plugin": "4.28.5",
    "@typescript-eslint/parser": "4.22.1",
    "coveralls": "3.1.1",
    "chai": "4.3.4",
    "conventional-changelog-cli": "2.1.1",
    "conventional-recommended-bump": "6.1.0",
    "copy-webpack-plugin": "9.0.1",
    "cz-conventional-changelog": "3.3.0",
    "eslint": "7.31.0",
    "eslint-config-prettier": "8.3.0",
    "eslint-plugin-eslint-comments": "3.2.0",
    "husky": "4.3.6",
    "lint-staged": "10.5.4",
    "mocha": "9.1.0",
    "mock-spawn": "0.2.6",
    "npm-run-all": "4.1.5",
    "nyc": "15.1.0",
    "prettier": "2.2.1",
    "sinon": "11.1.2",
    "source-map-support": "0.5.19",
    "ts-loader": "8.0.16",
    "typescript": "4.3.5",
    "vsce": "1.96.1",
    "vscode-test": "1.5.2",
    "webpack": "5.43.0",
    "webpack-cli": "4.5.0",
    "tmp": "^0.2.1",
    "rimraf": "3.0.2"
  },
  "prettier": {
    "endOfLine": "lf"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "lint-staged": {
    "*.{js,ts,md,json}": [
      "prettier --write"
    ],
    "*.{ts}": [
      "eslint --fix --max-warnings=0"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  }
}
